services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: freelancerpms
      POSTGRES_USER: freelancerpms
      POSTGRES_PASSWORD: pms
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U freelancerpms -d freelancerpms"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: DockerFile
    environment:
      USE_POSTGRES: "true"
      POSTGRES_DB: freelancerpms
      POSTGRES_USER: freelancerpms
      POSTGRES_PASSWORD: pms
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
    command: gunicorn project.wsgi:application -b 0.0.0.0:8000
    working_dir: /app
    volumes:
      - ./backend:/app
      - static_data:/app/static
    expose:
      - "8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: DockerFile
    volumes:
      - frontend_dist:/frontend_dist
    command: sh -c "rm -rf /frontend_dist/* && cp -r /app/dist/* /frontend_dist/ && tail -f /dev/null"

  nginx:
    image: nginx:1.25
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx_docker.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_dist:/var/www/app/frontend:ro
      - ./backend/static:/var/www/app/static:ro

volumes:
  db_data:
  static_data:
  frontend_dist:
